)]}'
{"version":3,"file":"/packages/reactive-table.js","sources":["reactive-table/lib/reactive_table.html","reactive-table/lib/reactive_table_i18n.js","reactive-table/lib/reactive_table.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,kD;AACA,kB;AACA,sB;AACA,oC;AACA,2D;AACA,0B;AACA,oB;AACA,yC;AACA,uD;AACA,4B;AACA,sB;AACA,qC;AACA,yC;AACA,4C;AACA,0D;AACA,S;AACA,iC;AACA,uD;AACA,oC;AACA,oC;AACA,6C;AACA,6D;AACA,8B;AACA,wB;AACA,6C;AACA,iC;AACA,+B;AACA,+B;AACA,wB;AACA,iD;AACA,iF;AACA,8B;AACA,8D;AACA,6D;AACA,8B;AACA,wB;AACA,4C;AACA,kC;AACA,uB;AACA,6B;AACA,6D;AACA,Y;AACA,mC;AACA,mF;AACA,W;AACA,6B;AACA,+B;AACA,wB;AACA,4C;AACA,kC;AACA,uB;AACA,6B;AACA,6D;AACA,W;AACA,6B;AACA,kD;AACA,+B;AACA,gE;AACA,0C;AACA,wD;AACA,O;AACA,wF;AACA,mD;AACA,4B;AACA,sB;AACA,mD;AACA,yK;AACA,8B;AACA,wB;AACA,8C;AACA,iC;AACA,6D;AACA,2B;AACA,6B;AACA,gH;AACA,W;AACA,6C;AACA,6D;AACA,yB;AACA,yB;AACA,kB;AACA,0B;AACA,yB;AACA,kB;AACA,oD;AACA,+G;AACA,gC;AACA,0B;AACA,6D;AACA,sF;AACA,kC;AACA,4B;AACA,uD;AACA,uC;AACA,yC;AACA,mC;AACA,4B;AACA,6D;AACA,+B;AACA,sB;AACA,yC;AACA,sC;AACA,iC;AACA,0B;AACA,6D;AACA,sF;AACA,kC;AACA,4B;AACA,uD;AACA,wC;AACA,yC;AACA,mC;AACA,4B;AACA,6D;AACA,+B;AACA,sB;AACA,yC;AACA,sC;AACA,qD;AACA,+B;AACA,wB;AACA,uD;AACA,2D;AACA,gC;AACA,0B;AACA,kD;AACA,mC;AACA,+D;AACA,6B;AACA,+B;AACA,kH;AACA,a;AACA,yB;AACA,+D;AACA,mC;AACA,iC;AACA,0B;AACA,kD;AACA,iC;AACA,+D;AACA,c;AACA,+B;AACA,kH;AACA,a;AACA,yB;AACA,+D;AACA,mC;AACA,gC;AACA,4B;AACA,8F;AACA,uD;AACA,4B;AACA,sB;AACA,6E;AACA,0E;AACA,8B;AACA,wB;AACA,8C;AACA,+B;AACA,0D;AACA,W;AACA,6B;AACA,qD;AACA,gC;AACA,0B;AACA,4C;AACA,qD;AACA,kC;AACA,4B;AACA,iD;AACA,8D;AACA,e;AACA,c;AACA,iC;AACA,0B;AACA,6B;AACA,kF;AACA,Y;AACA,iC;AACA,2C;AACA,6D;AACA,2D;AACA,4B;AACA,sB;AACA,qC;AACA,6C;AACA,4C;AACA,0D;AACA,S;AACA,iC;AACA,uD;AACA,gD;AACA,6E;AACA,uB;AACA,uB;AACA,gB;AACA,sB;AACA,gC;AACA,qB;AACA,2B;AACA,mE;AACA,S;AACA,wB;AACA,uB;AACA,gB;AACA,sB;AACA,oF;AACA,iD;AACA,qD;AACA,2C;AACA,4D;AACA,8B;AACA,wB;AACA,+C;AACA,kC;AACA,yB;AACA,uB;AACA,kB;AACA,2B;AACA,yB;AACA,kB;AACA,0B;AACA,yB;AACA,kB;AACA,6B;AACA,kD;AACA,6E;AACA,uB;AACA,uB;AACA,gB;AACA,sB;AACA,gC;AACA,qB;AACA,2B;AACA,mE;AACA,S;AACA,wB;AACA,uB;AACA,gB;AACA,sB;AACA,2E;AACA,0B;AACA,+D;AACA,4C;AACA,2D;AACA,8B;AACA,wB;AACA,+C;AACA,8B;AACA,yB;AACA,yB;AACA,kB;AACA,0B;AACA,yB;AACA,kB;AACA,0B;AACA,uB;AACA,kB;AACA,8B;AACA,kD;AACA,kB;AACA,M;AACA,I;;;;;;;;;;;;;;;;;;;ACvQA,gB;AACA,oB;AACA,yB;AACA,qB;AACA,qC;AACA,qB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,qB;AACA,uC;AACA,qB;AACA,iB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,yB;AACA,yC;AACA,yB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,0B;AACA,wC;AACA,uB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,yC;AACA,uB;AACA,iB;AACA,K;AACA,G;;AAEA,mB;AACA,oB;AACA,yB;AACA,wB;AACA,yC;AACA,uB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,wC;AACA,uB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,qB;AACA,sC;AACA,qB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,yB;AACA,yC;AACA,yB;AACA,e;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;ACxFA,0C;AACA,0C;AACA,E;;AAEA,mD;AACA,oD;AACA,E;;AAEA,iD;AACA,mD;AACA,E;;AAEA,iD;AACA,kD;AACA,E;;AAEA,4C;AACA,4C;AACA,E;;AAEA,oD;AACA,qD;AACA,E;;;;AAIA,qC;AACA,6C;AACA,uC;AACA,mD;AACA,qD;AACA,oC;AACA,qC;AACA,oD;AACA,kC;AACA,qD;AACA,yC;AACA,uC;AACA,e;AACA,oD;AACA,qC;AACA,kE;AACA,oC;AACA,qD;AACA,gD;AACA,uC;AACA,c;AACA,0D;AACA,mD;AACA,c;AACA,qD;AACA,8C;AACA,c;AACA,uG;AACA,gB;AACA,wH;AACA,qD;AACA,S;AACA,K;;AAEA,uC;AACA,oC;AACA,uC;AACA,yC;AACA,gE;AACA,K;;AAEA,2C;AACA,wC;AACA,8C;AACA,gB;AACA,yB;AACA,S;AACA,M;AACA,2C;;AAEA,oD;AACA,6D;AACA,oF;AACA,2D;AACA,gG;AACA,yD;AACA,+F;;AAEA,Y;AACA,qB;AACA,+B;AACA,2B;AACA,uB;AACA,gD;AACA,8B;AACA,M;AACA,E;;AAEA,iD;AACA,qC;AACA,mC;AACA,qB;AACA,wC;;AAEA,wB;AACA,wB;AACA,mC;AACA,sB;AACA,4C;AACA,gF;AACA,gC;AACA,gC;AACA,oB;AACA,qD;AACA,a;AACA,iD;AACA,4C;AACA,6D;AACA,oB;AACA,+B;AACA,wD;AACA,a;AACA,gB;AACA,+B;AACA,S;AACA,O;AACA,mB;AACA,E;;AAEA,+C;AACA,yD;AACA,uB;AACA,iB;AACA,gD;AACA,+C;AACA,qC;AACA,6C;AACA,+D;AACA,+B;AACA,yD;AACA,4C;AACA,e;AACA,yC;AACA,2D;AACA,4C;AACA,a;AACA,W;AACA,K;AACA,uD;AACA,E;;;AAGA,mD;AACA,wE;AACA,8D;AACA,0D;AACA,0C;AACA,E;;AAEA,gC;AACA,yC;;AAEA,mC;AACA,+D;AACA,mC;AACA,kC;AACA,2B;AACA,qC;AACA,sE;AACA,mC;AACA,oB;AACA,6B;AACA,a;AACA,W;AACA,iC;AACA,M;;AAEA,wC;AACA,uC;AACA,M;;AAEA,2B;AACA,gC;AACA,M;;AAEA,6B;AACA,kC;AACA,M;;AAEA,kD;AACA,kF;AACA,M;;AAEA,+B;AACA,oB;AACA,M;;AAEA,sC;AACA,2E;AACA,qC;AACA,M;;AAEA,+B;AACA,gF;AACA,sE;AACA,qD;;AAEA,sE;AACA,4E;AACA,uC;AACA,kE;;AAEA,8B;AACA,iE;AACA,0D;AACA,yE;AACA,e;AACA,uC;AACA,0C;AACA,a;AACA,oD;AACA,gB;AACA,2D;AACA,+B;AACA,+C;;AAEA,sD;AACA,gC;AACA,2B;AACA,4B;AACA,e;AACA,S;AACA,M;;AAEA,4B;AACA,kE;AACA,M;;AAEA,oC;AACA,iE;AACA,M;;AAEA,oC;AACA,qE;AACA,M;;AAEA,mC;AACA,qE;AACA,M;;AAEA,kC;AACA,gF;AACA,4E;AACA,kE;AACA,8D;AACA,4D;AACA,M;;AAEA,oC;AACA,2F;AACA,2F;AACA,kE;AACA,K;AACA,G;;AAEA,+B;AACA,yD;AACA,0F;AACA,2D;AACA,mF;AACA,qE;AACA,6C;AACA,oF;AACA,0E;AACA,gB;AACA,6D;AACA,S;AACA,M;;AAEA,4D;AACA,+C;AACA,mG;AACA,4D;AACA,6D;AACA,M;;AAEA,gF;AACA,a;AACA,kE;AACA,2G;AACA,sE;AACA,qB;AACA,4D;AACA,S;AACA,M;;AAEA,8E;AACA,a;AACA,sE;AACA,2G;AACA,sE;AACA,qB;AACA,2D;AACA,S;AACA,M;;AAEA,yE;AACA,uG;AACA,6D;AACA,sD;AACA,qD;AACA,M;;AAEA,qE;AACA,uG;AACA,6D;AACA,sD;AACA,qD;AACA,K;AACA,G","sourcesContent":["\nTemplate.__define__(\"reactiveTable\", (function() {\n  var self = this;\n  var template = this;\n  return Spacebars.With(function() {\n    return Spacebars.call(self.lookup(\"generateSettings\"));\n  }, UI.block(function() {\n    var self = this;\n    return [ \"\\n    \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"showFilter\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n      \", HTML.DIV({\n        \"class\": \"reactive-table-filter\",\n        \"reactive-table-group\": function() {\n          return Spacebars.mustache(self.lookup(\"group\"));\n        }\n      }, \"\\n        \", HTML.DIV({\n        \"class\": \"input-group col-sm-4 col-sm-offset-8\"\n      }, \"\\n          \", HTML.SPAN({\n        \"class\": \"input-group-addon\"\n      }, \"\\n            \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"useFontAwesome\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n              \", HTML.I({\n          \"class\": \"fa fa-filter\"\n        }), \"\\n            \" ];\n      }), UI.block(function() {\n        var self = this;\n        return [ \"\\n              \", function() {\n          return Spacebars.mustache(self.lookup(\"i18n\"), \"reactiveTable.filter\");\n        }, \"\\n            \" ];\n      })), \"\\n          \"), \"\\n          \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"useFontAwesome\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n\t        \", HTML.INPUT({\n          \"class\": \"form-control\",\n          type: \"text\",\n          value: function() {\n            return Spacebars.mustache(self.lookup(\"filter\"));\n          },\n          placeholder: function() {\n            return Spacebars.mustache(self.lookup(\"i18n\"), \"reactiveTable.filter\");\n          }\n        }), \"\\n          \" ];\n      }), UI.block(function() {\n        var self = this;\n        return [ \"\\n\t        \", HTML.INPUT({\n          \"class\": \"form-control\",\n          type: \"text\",\n          value: function() {\n            return Spacebars.mustache(self.lookup(\"filter\"));\n          }\n        }), \"\\n          \" ];\n      })), \"\\n        \"), \"\\n      \"), \"\\n    \" ];\n    })), \"\\n    \", HTML.TABLE({\n      \"class\": \"table table-striped table-hover reactive-table\",\n      \"reactive-table-group\": function() {\n        return Spacebars.mustache(self.lookup(\"group\"));\n      }\n    }, \"\\n      \", HTML.THEAD(\"\\n        \", HTML.TR(\"\\n          \", UI.Each(function() {\n      return Spacebars.call(self.lookup(\"fields\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n            \", UI.If(function() {\n        return Spacebars.dataMustache(self.lookup(\"isSortKey\"), self.lookup(\".\"), Spacebars.dot(self.lookup(\"..\"), \"group\"), Spacebars.dot(self.lookup(\"..\"), \"fields\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n              \", HTML.TH({\n          \"class\": [ function() {\n            return Spacebars.mustache(self.lookup(\"getKey\"));\n          }, \" sortable\" ],\n          index: function() {\n            return Spacebars.mustache(self.lookup(\"getFieldIndex\"), Spacebars.dot(self.lookup(\"..\"), \"fields\"));\n          }\n        }, \"\\n                \", function() {\n          return Spacebars.mustache(self.lookup(\"getLabel\"));\n        }, HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), \"\\n                \", UI.If(function() {\n          return Spacebars.dataMustache(self.lookup(\"isAscending\"), Spacebars.dot(self.lookup(\"..\"), \"group\"));\n        }, UI.block(function() {\n          var self = this;\n          return [ \"\\n                  \", UI.If(function() {\n            return Spacebars.call(Spacebars.dot(self.lookup(\"..\"), \"useFontAwesome\"));\n          }, UI.block(function() {\n            var self = this;\n            return [ \"\\n                    \", HTML.I({\n              \"class\": \"fa fa-sort-asc\"\n            }), \"\\n                  \" ];\n          }), UI.block(function() {\n            var self = this;\n            return [ \"\\n                    \", HTML.CharRef({\n              html: \"&#x25BC;\",\n              str: \"▼\"\n            }), \"\\n                  \" ];\n          })), \"\\n                \" ];\n        }), UI.block(function() {\n          var self = this;\n          return [ \"\\n                  \", UI.If(function() {\n            return Spacebars.call(Spacebars.dot(self.lookup(\"..\"), \"useFontAwesome\"));\n          }, UI.block(function() {\n            var self = this;\n            return [ \"\\n                    \", HTML.I({\n              \"class\": \"fa fa-sort-desc\"\n            }), \"\\n                  \" ];\n          }), UI.block(function() {\n            var self = this;\n            return [ \"\\n                    \", HTML.CharRef({\n              html: \"&#x25B2;\",\n              str: \"▲\"\n            }), \"\\n                  \" ];\n          })), \"\\n                \" ];\n        })), \"\\n              \"), \"\\n            \" ];\n      }), UI.block(function() {\n        var self = this;\n        return [ \"\\n              \", UI.If(function() {\n          return Spacebars.call(self.lookup(\"isSortable\"));\n        }, UI.block(function() {\n          var self = this;\n          return [ \"\\n                \", HTML.TH({\n            \"class\": [ function() {\n              return Spacebars.mustache(self.lookup(\"getKey\"));\n            }, \" sortable\" ],\n            index: function() {\n              return Spacebars.mustache(self.lookup(\"getFieldIndex\"), Spacebars.dot(self.lookup(\"..\"), \"fields\"));\n            }\n          }, function() {\n            return Spacebars.mustache(self.lookup(\"getLabel\"));\n          }), \"\\n              \" ];\n        }), UI.block(function() {\n          var self = this;\n          return [ \"\\n                \", HTML.TH({\n            \"class\": function() {\n              return Spacebars.mustache(self.lookup(\"getKey\"));\n            },\n            index: function() {\n              return Spacebars.mustache(self.lookup(\"getFieldIndex\"), Spacebars.dot(self.lookup(\"..\"), \"fields\"));\n            }\n          }, function() {\n            return Spacebars.mustache(self.lookup(\"getLabel\"));\n          }), \"\\n              \" ];\n        })), \"\\n            \" ];\n      })), \"\\n          \" ];\n    })), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.TBODY(\"\\n        \", UI.Each(function() {\n      return Spacebars.call(self.lookup(\"sortedRows\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n          \", HTML.TR(\"\\n            \", UI.Each(function() {\n        return Spacebars.call(Spacebars.dot(self.lookup(\"..\"), \"fields\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n              \", HTML.TD({\n          \"class\": function() {\n            return Spacebars.mustache(self.lookup(\"key\"));\n          }\n        }, UI.If(function() {\n          return Spacebars.call(self.lookup(\"tmpl\"));\n        }, UI.block(function() {\n          var self = this;\n          return Spacebars.With(function() {\n            return Spacebars.call(self.lookup(\"..\"));\n          }, UI.block(function() {\n            var self = this;\n            return Spacebars.include(function() {\n              return Spacebars.dot(self.lookup(\"..\"), \"tmpl\");\n            });\n          }));\n        }), UI.block(function() {\n          var self = this;\n          return function() {\n            return Spacebars.mustache(self.lookup(\"getField\"), self.lookup(\"..\"));\n          };\n        }))), \"\\n            \" ];\n      })), \"\\n          \"), \"\\n        \" ];\n    })), \"\\n      \"), \"\\n    \"), \"\\n    \", UI.If(function() {\n      return Spacebars.call(self.lookup(\"showNavigation\"));\n    }, UI.block(function() {\n      var self = this;\n      return [ \"\\n      \", HTML.DIV({\n        \"class\": \"reactive-table-navigation\",\n        \"reactive-table-group\": function() {\n          return Spacebars.mustache(self.lookup(\"group\"));\n        }\n      }, \"\\n        \", HTML.DIV({\n        \"class\": \"form-inline form-group rows-per-page\"\n      }, \"\\n          \", HTML.LABEL(function() {\n        return Spacebars.mustache(self.lookup(\"i18n\"), \"reactiveTable.show\");\n      }, HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.INPUT({\n        \"class\": \"form-control\",\n        type: \"text\",\n        value: function() {\n          return Spacebars.mustache(self.lookup(\"getRowsPerPage\"));\n        }\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), function() {\n        return Spacebars.mustache(self.lookup(\"i18n\"), \"reactiveTable.rowsPerPage\");\n      }), \"\\n        \"), \"\\n        \", HTML.DIV({\n        \"class\": \"form-inline form-group page-number\"\n      }, \"\\n          \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"isntFirstPage\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n            \", HTML.LABEL({\n          \"class\": \"previous-page\"\n        }, HTML.CharRef({\n          html: \"&lt;\",\n          str: \"<\"\n        })), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), \"\\n          \" ];\n      })), \"\\n          \", HTML.LABEL(function() {\n        return Spacebars.mustache(self.lookup(\"i18n\"), \"reactiveTable.page\");\n      }, HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.INPUT({\n        \"class\": \"form-control\",\n        type: \"text\",\n        value: function() {\n          return Spacebars.mustache(self.lookup(\"getCurrentPage\"));\n        }\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), function() {\n        return Spacebars.mustache(self.lookup(\"i18n\"), \"reactiveTable.of\");\n      }, \" \", function() {\n        return Spacebars.mustache(self.lookup(\"getPageCount\"));\n      }), \"\\n          \", UI.If(function() {\n        return Spacebars.call(self.lookup(\"isntLastPage\"));\n      }, UI.block(function() {\n        var self = this;\n        return [ \"\\n            \", HTML.LABEL({\n          \"class\": \"next-page\"\n        }, HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), HTML.CharRef({\n          html: \"&gt;\",\n          str: \">\"\n        })), \"\\n          \" ];\n      })), \"\\n        \"), \"\\n      \"), \"\\n    \" ];\n    })), \"\\n  \" ];\n  }));\n}));\n","i18n.map('en', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Show',\n        rowsPerPage: 'rows per page',\n        page: 'Page',\n        of: 'of'\n    }\n});\n\ni18n.map('fr', {\n    reactiveTable: {\n        filter: 'Filtre',\n        show: 'Voir',\n        rowsPerPage: 'lignes par page',\n        page: 'page',\n        of: 'sur'\n    }\n});\n\ni18n.map('ru', {\n    reactiveTable: {\n        filter: 'Фильтр',\n        show: 'Показать',\n        rowsPerPage: 'линий на странице',\n        page: 'Страница',\n        of: 'из'\n    }\n});\n\ni18n.map('es', {\n    reactiveTable: {\n        filter: 'Filtro',\n        show:   'Mostrar',\n        rowsPerPage: 'filas por página',\n        page: 'Página',\n        of: 'de'\n    }\n});\n\ni18n.map('nl', {\n    reactiveTable: {\n        filter: 'Filter',\n        show:   'Toon',\n        rowsPerPage: 'regels per pagina',\n        page: 'Pagina',\n        of: 'van'\n    }\n});\n\ni18n.map('pt-br', {\n    reactiveTable: {\n        filter: 'Filtro',\n        show: 'Mostrar',\n        rowsPerPage: 'linhas por página',\n        page: 'Página',\n        of: 'de'\n    }\n});\n\ni18n.map('it', {\n    reactiveTable: {\n        filter: 'Filtra',\n        show: 'Mostra',\n        rowsPerPage: 'righe per pagina',\n        page: 'Pagina',\n        of: 'di'\n    }\n});\n\ni18n.map('sv', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Visa',\n        rowsPerPage: 'rader per sida',\n        page: 'Sida',\n        of: 'av'\n    }\n});\n\ni18n.map('ua', {\n    reactiveTable: {\n        filter: 'Фільтр',\n        show: 'Показати',\n        rowsPerPage: 'линій на страниці',\n        page: 'Страниця',\n        of: 'з'\n    }\n});\n","var getSessionSortKey = function (group) {\n    return group + '-reactive-table-sort';\n};\n\nvar getSessionSortDirectionKey = function (group) {\n    return group + '-reactive-table-sort-direction';\n};\n\nvar getSessionRowsPerPageKey = function (group) {\n    return group + '-reactive-table-rows-per-page';\n};\n\nvar getSessionCurrentPageKey = function (group) {\n    return group + '-reactive-table-current-page';\n};\n\nvar getSessionFilterKey = function (group) {\n    return group + '-reactive-table-filter';\n};\n\nvar getSessionShowNavigationKey = function (group) {\n    return group + '-reactive-table-show-navigation';\n};\n\n\n\nvar generateSettings =  function () {\n    var collection = this.collection || this;\n    var settings = this.settings || {};\n    var group = settings.group || 'reactive-table';\n    if (!(collection instanceof Meteor.Collection)) {\n        if (_.isArray(collection)) {\n            // collection is an array\n            // create a new collection from the data\n            var data = collection;\n            collection = new Meteor.Collection(null);\n            _.each(data, function (doc) {\n                collection.insert(doc);\n            });\n        } else if (_.isFunction(collection.fetch)) {\n            // collection is a cursor\n            // create a new collection that will reactively update\n            var cursor = collection;\n            collection = new Meteor.Collection(null);\n            var addedCallback = function (doc) {\n                collection.insert(doc);\n            };\n            var changedCallback = function (doc, oldDoc) {\n                collection.update(oldDoc._id, doc);\n            };\n            var removedCallback = function (oldDoc) {\n                collection.remove(oldDoc._id);\n            };\n            cursor.observe({added: addedCallback, changed: changedCallback, removed: removedCallback});\n        } else {\n            console.log(\"reactiveTable error: argument is not an instance of Meteor.Collection, a cursor, or an array\");\n            collection = new Meteor.Collection(null);\n        }\n    }\n\n    var fields = settings.fields || {};\n    if (_.keys(fields).length < 1 ||\n        (_.keys(fields).length === 1 &&\n         _.keys(fields)[0] === 'hash')) {\n        fields = _.without(_.keys(collection.findOne()), '_id');\n    }\n\n    var normalizeField = function (field) {\n        if (typeof field === 'string') {\n            return {key: field, label: field};\n        } else {\n            return field;\n        }\n    };\n    fields = _.map(fields, normalizeField);\n\n    Session.setDefault(getSessionSortKey(group), 0);\n    Session.setDefault(getSessionSortDirectionKey(group), 1);\n    Session.setDefault(getSessionRowsPerPageKey(group), settings.rowsPerPage || 10);\n    Session.setDefault(getSessionCurrentPageKey(group), 0);\n    Session.setDefault(getSessionShowNavigationKey(group), settings.showNavigation || 'always');\n    Session.setDefault(getSessionFilterKey(group), null);\n    var showFilter = (typeof settings.showFilter === \"undefined\" ? true : settings.showFilter);\n\n    return {\n        group: group,\n        collection: collection,\n        settings: settings,\n        fields: fields,\n        useFontAwesome: settings.useFontAwesome,\n        showFilter: showFilter\n    };\n};\n\nvar parseFilterString = function (filterString) {\n    var startQuoteRegExp = /^[\\'\\\"]/;\n    var endQuoteRegExp = /[\\'\\\"]$/;\n    var filters = [];\n    var words = filterString.split(' ');\n\n    var inQuote = false;\n    var quotedWord = '';\n    _.each(words, function (word) {\n        if (inQuote) {\n            if (endQuoteRegExp.test(word)) {\n                filters.push(quotedWord + ' ' + word.slice(0, word.length - 1));\n                inQuote = false;\n                quotedWord = '';\n            } else {\n                quotedWord = quotedWord + ' ' + word;\n            }\n        } else if (startQuoteRegExp.test(word)) {\n            if (endQuoteRegExp.test(word)) {\n                filters.push(word.slice(1, word.length - 1));\n            } else {\n                inQuote = true;\n                quotedWord = word.slice(1, word.length);\n            }\n        } else {\n            filters.push(word);\n        }\n    });\n    return filters;\n};\n\nvar getFilterQuery = function (group, fields) {\n    var filter = Session.get(getSessionFilterKey(group));\n    var queryList = [];\n    if (filter) {\n        var filters = parseFilterString(filter);\n        _.each(filters, function (filterWord) {\n            var filterQueryList = [];\n            _.each(fields, function (field) {\n                var filterRegExp = new RegExp(filterWord, 'i');\n                var query = {};\n                query[field.key || field] = filterRegExp;\n                filterQueryList.push(query);\n            });\n            if (filterQueryList.length) {\n                var filterQuery = {'$or': filterQueryList};\n                queryList.push(filterQuery);\n            }\n        });\n    }\n    return queryList.length ? {'$and': queryList} : {};\n};\n\n\nTemplate.reactiveTable.getPageCount = function () {\n    var rowsPerPage = Session.get(getSessionRowsPerPageKey(this.group));\n    var filterQuery = getFilterQuery(this.group, this.fields);\n    var count = this.collection.find(filterQuery).count();\n    return Math.ceil(count / rowsPerPage);\n};\n\nTemplate.reactiveTable.helpers({\n    'generateSettings': generateSettings,\n\n    'getField': function (object) {\n        var fn = this.fn || function (value) { return value; };\n        var key = this.key || this;\n        var keys = key.split('.');\n        var value = object;\n        _.each(keys, function (key) {\n            if (!_.isUndefined(value) && !_.isUndefined(value[key])) {\n                value = value[key];\n            } else {\n                value = null;\n            }\n        });\n        return fn(value, object);\n    },\n\n    'getFieldIndex': function (fields) {\n        return _.indexOf(fields, this);\n    },\n\n    'getKey': function () {\n        return this.key || this;\n    },\n\n    'getLabel': function () {\n        return this.label || this;\n    },\n\n    'isSortKey': function (field, group, fields) {\n        return Session.equals(getSessionSortKey(group), _.indexOf(fields, field));\n    },\n\n    'isSortable': function () {\n        return true;\n    },\n\n    'isAscending' : function (group) {\n        var sortDirection = Session.get(getSessionSortDirectionKey(group));\n        return (sortDirection === 1);\n    },\n\n    'sortedRows': function () {\n        var sortDirection = Session.get(getSessionSortDirectionKey(this.group));\n        var sortKeyIndex = Session.get(getSessionSortKey(this.group));\n        var sortKeyField = this.fields[sortKeyIndex];\n\n        var limit = Session.get(getSessionRowsPerPageKey(this.group));\n        var currentPage = Session.get(getSessionCurrentPageKey(this.group));\n        var skip = currentPage * limit;\n        var filterQuery = getFilterQuery(this.group, this.fields);\n\n        if (sortKeyField.fn) {\n            var data = this.collection.find(filterQuery).fetch();\n            var sorted =_.sortBy(data, function (object) {\n                return sortKeyField.fn(object[sortKeyField.key], object);\n            });\n            if (sortDirection === -1) {\n                sorted = sorted.reverse();\n            }\n            return sorted.slice(skip, skip + limit);\n        } else {\n            var sortKey = sortKeyField.key || sortKeyField;\n            var sortQuery = {};\n            sortQuery[sortKey] = sortDirection;\n\n            return this.collection.find(filterQuery, {\n                sort: sortQuery,\n                skip: skip,\n                limit: limit\n            });\n        }\n    },\n\n    'filter' : function () {\n        return Session.get(getSessionFilterKey(this.group)) || '';\n    },\n\n    'getRowsPerPage' : function () {\n        return Session.get(getSessionRowsPerPageKey(this.group));\n    },\n\n    'getCurrentPage' : function () {\n        return 1 + Session.get(getSessionCurrentPageKey(this.group));\n    },\n\n    'isntFirstPage' : function () {\n        return Session.get(getSessionCurrentPageKey(this.group)) > 0;\n    },\n\n    'isntLastPage' : function () {\n        var currentPage = 1 + Session.get(getSessionCurrentPageKey(this.group));\n        var rowsPerPage = Session.get(getSessionRowsPerPageKey(this.group));\n        var filterQuery = getFilterQuery(this.group, this.fields);\n        var count = this.collection.find(filterQuery).count();\n        return currentPage < Math.ceil(count / rowsPerPage);\n    },\n\n    'showNavigation' : function () {\n        if (Session.get(getSessionShowNavigationKey(this.group)) === 'always') return true;\n        if (Session.get(getSessionShowNavigationKey(this.group)) === 'never') return false;\n        return Template.reactiveTable.getPageCount.call(this) > 1;\n    }\n});\n\nTemplate.reactiveTable.events({\n    'click .reactive-table .sortable': function (event) {\n        var target = $(event.target).is('i') ? $(event.target).parent() : $(event.target);\n        var sortIndex = parseInt(target.attr('index'), 10);\n        var group = target.parents('.reactive-table').attr('reactive-table-group');\n        var currentSortIndex = Session.get(getSessionSortKey(group));\n        if (currentSortIndex === sortIndex) {\n            var sortDirection = -1 * Session.get(getSessionSortDirectionKey(group));\n            Session.set(getSessionSortDirectionKey(group), sortDirection);\n        } else {\n            Session.set(getSessionSortKey(group), sortIndex);\n        }\n    },\n\n    'keyup .reactive-table-filter input': function (event) {\n        var filterText = $(event.target).val();\n        var group = $(event.target).parents('.reactive-table-filter').attr('reactive-table-group');\n        Session.set(getSessionFilterKey(group), filterText);\n        Session.set(getSessionCurrentPageKey(this.group), 0);\n    },\n\n    'change .reactive-table-navigation .rows-per-page input': function (event) {\n        try {\n            var rowsPerPage = parseInt($(event.target).val(), 10);\n            var group = $(event.target).parents('.reactive-table-navigation').attr('reactive-table-group');\n            Session.set(getSessionRowsPerPageKey(group), rowsPerPage);\n        } catch (e) {\n            console.log('rows per page must be an integer');\n        }\n    },\n\n    'change .reactive-table-navigation .page-number input': function (event) {\n        try {\n            var currentPage = parseInt($(event.target).val(), 10) - 1;\n            var group = $(event.target).parents('.reactive-table-navigation').attr('reactive-table-group');\n            Session.set(getSessionCurrentPageKey(group), currentPage);\n        } catch (e) {\n            console.log('current page must be an integer');\n        }\n    },\n\n    'click .reactive-table-navigation .previous-page': function (event) {\n        var group = $(event.target).parents('.reactive-table-navigation').attr('reactive-table-group');\n        var currentPageKey = getSessionCurrentPageKey(group);\n        var currentPage = Session.get(currentPageKey);\n        Session.set(currentPageKey, currentPage - 1);\n    },\n\n    'click .reactive-table-navigation .next-page': function (event) {\n        var group = $(event.target).parents('.reactive-table-navigation').attr('reactive-table-group');\n        var currentPageKey = getSessionCurrentPageKey(group);\n        var currentPage = Session.get(currentPageKey);\n        Session.set(currentPageKey, currentPage + 1);\n    }\n});\n"]}